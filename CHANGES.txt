v 0.1.5
=======
Add asyncio's a* methods to the table interface:
  aget, aput, adelete, aclear
  aexecute_cql
  adelete_partition, aget_partition
  aann_search, ametric_ann_search
  afind_entries, afind_and_delete_entries
Add explicit async_setup parameter to table constructors
bugfix: type of kwargs/pargs in most calls
bugfix: type of input for [check_]resolve_session
repo housekeeping:
  CI/CD (with testing on Astra DB)
  removed branch 'dev' from git flow

v 0.1.4
=======
Add option to provide the SCB download url template to cassio.init()

v 0.1.3
=======
Introducing "init()" global method:
  set session (and keyspace) globally for all objects created thereafter
  can accept a range of different initialization signatures
  added a command-line util to generate the "init string"
  added extensive testing support
  usage of the global db/keyspace throughout the table classes
Introducing "find_and_delete_entries" method for metadata classes:
  internally based on find_entries. Will collect rows to delete and delete them.
Rework of MultiTableCassandraReader (formerly CassandraExtractor) modules:
  typing support
  optimized query planning and their concurrent execution
  idiomatic internal class structure
  factoring of db-inspection login to common utils
  added extensive testing support
  usage of the global db/keyspace in the extractor
Makefile with: testing, linting/style/typing, building
Stricter mypy config for testing (and made code compliant)
WARNING: passing session/keyspace as pargs can break! Use kwargs!

v 0.1.2
=======
(same as 0.1.3 with a missing dependency, sorry)

v 0.1.1
=======
Interface changes in the CassandraExtractor object:
  init param literal_nones -> admit_nulls
  member name change self.requiredParameters -> self.input_parameters
  new member (a function) self.dictionary_based_call
  new member (a list) self.output_parameters

v 0.1.0
=======
The mixin refactoring of all the table abstractions is introduced.

v 0.0.7
=======
* VectorTable loses `auto_id` parameter and gains `primary_key_type`

v 0.0.6
=======

* VectorTable implements `put_async` to enable concurrent inserts
* more type hints

v 0.0.5
=======

* Removed globals
* Vector DB: renamed class, method signature & parameters
* Vector DB: removed overfetch

v 0.0.4
=======

* Switch to PyPI Cassandra driver v3.28.0+
* Start deprecating the 'experimentalVectorSearch' flag
